import{_ as o,i as e,z as s,k as n,t,j as p,O as l,h as c}from"./chunks/framework.1a1d6641.js";const r="/notes/assets/vue3.e3ef250d.svg",D="/notes/assets/vue3-tree.41d8222b.png",y="/notes/assets/Teleport.09d436b5.png",F="/notes/assets/vue-teleport.11751518.gif",i="/notes/assets/vue3-async.68dbd74b.gif",B="/notes/assets/webpack.1161e39e.png",b="/notes/assets/vite-build.89d545c7.png",u="/notes/assets/vue3-al.3272254e.gif",A="/notes/assets/vue2-life.83a5d53a.png",E="/notes/assets/vue3-life.f44c1d1a.svg",m="/notes/assets/injrct.ee8c2279.png",d="/notes/assets/async-in.9e9c5000.gif",g="/notes/assets/vue3-cmp.197cba26.gif",C="/notes/assets/vue3-cmp-err.04375426.png",v="/notes/assets/vue3-slot.8bb5b962.png",h="/notes/assets/vue3-apis.a04dffb3.gif",z=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"web/vue/vue3.md","lastUpdated":1696236510000}'),f={name:"web/vue/vue3.md"},q=l("",98),k=s("li",null,"返回一个 RefImpl 对象 (ES6中的class类)；",-1),w=s("li",null,"必须操作该对象的value值改变数据 （状态）",-1),x=s("code",null,".value",-1),P=s("li",null,[n("响应式依然是靠 "),s("code",null,"Object.defineProperty()"),n(" 的 "),s("code",null,"get"),n(" 与 "),s("code",null,"set"),n(" 完成的 。")],-1),j=l("",137),R={class:"tip custom-block"},_=s("p",{class:"custom-block-title"},"💭",-1),V=l("",143);function T(a,I,S,O,N,M){return c(),e("div",null,[q,s("ul",null,[k,w,s("li",null,[n("模板中读取数据: 不需要"),x,n("，直接："),s("code",null,"<div>"+t(a.xxx)+"</div>",1)]),P]),j,s("div",R,[_,s("p",null,[n("插槽就是子组件中的提供给父组件使用的一个占位符，用"),p(a.$slots,"default"),n(" 表示，父组件可以在这个占位符中填充任何模板代码，如 HTML、组件等，填充的内容会替换子组件的"),p(a.$slots,"default"),n("标签。")])]),V])}const L=o(f,[["render",T]]);export{z as __pageData,L as default};
