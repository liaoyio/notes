import{_ as s,i as a,h as n,O as l}from"./chunks/framework.1a1d6641.js";const o="/notes/assets/async-script.40da0c57.png",h=JSON.parse('{"title":"Javascript 原生函数与属性","description":"","frontmatter":{"author":"Liaoyi","date":"2023-01-20T00:00:00.000Z"},"headers":[],"relativePath":"basic/js/api/fn.md","lastUpdated":1696236510000}'),e={name:"basic/js/api/fn.md"},p=l(`<h1 id="javascript-原生函数与属性" tabindex="-1">Javascript 原生函数与属性 <a class="header-anchor" href="#javascript-原生函数与属性" aria-label="Permalink to &quot;Javascript 原生函数与属性&quot;">​</a></h1><details class="details custom-block"><summary>查看目录</summary><nav class="table-of-contents"><ul><li><a href="#属性获取">属性获取</a><ul><li><a href="#object-keys">Object.keys</a></li><li><a href="#object-getownpropertynames">Object.getOwnPropertyNames</a></li><li><a href="#object-getownpropertysymbols">Object.getOwnPropertySymbols</a></li></ul></li><li><a href="#节点位置关系">节点位置关系</a><ul><li><a href="#node-contains">Node.contains</a></li><li><a href="#node-comparedocumentposition">Node.compareDocumentPosition</a></li></ul></li><li><a href="#获取文本">获取文本</a><ul><li><a href="#htmlelement-innertext">HTMLElement.innerText</a></li><li><a href="#node-textcontent">Node.textContent</a></li></ul></li><li><a href="#节点取值">节点取值</a><ul><li><a href="#value">value</a></li><li><a href="#node-nodevalue">Node.nodeValue</a></li></ul></li><li><a href="#节点复制">节点复制</a><ul><li><a href="#document-adoptnode">Document.adoptNode</a></li><li><a href="#document-importnode">Document.importNode</a></li><li><a href="#node-clonenode">Node.cloneNode</a></li></ul></li><li><a href="#父节点">父节点</a><ul><li><a href="#node-childnodes">Node.childNodes</a></li><li><a href="#parentnode-children">ParentNode.children</a></li></ul></li><li><a href="#添加节点">添加节点</a><ul><li><a href="#node-appendchild">node.appendChild</a></li><li><a href="#parentnode-append">ParentNode.append</a></li></ul></li><li><a href="#函数调用-call-apply-bind">函数调用 call, apply, bind</a><ul><li><a href="#function-prototype-call">Function.prototype.call</a></li><li><a href="#function-prototype-apply">Function.prototype.apply</a></li><li><a href="#function-prototype-bind">Function.prototype.bind</a></li></ul></li><li><a href="#字符串截取">字符串截取</a><ul><li><a href="#string-prototype-substr">String.prototype.substr</a></li><li><a href="#string-prototype-substring">String.prototype.substring</a></li></ul></li><li><a href="#遍历">遍历</a><ul><li><a href="#for-in">for in</a></li><li><a href="#for-of">for of</a></li></ul></li><li><a href="#域名信息">域名信息</a><ul><li><a href="#location-host">location.host</a></li><li><a href="#location-hostname">location.hostname</a></li></ul></li><li><a href="#异步加载脚本">异步加载脚本</a><ul><li><a href="#defer">defer</a></li><li><a href="#async">async</a></li></ul></li></ul></nav></details><h2 id="属性获取" tabindex="-1">属性获取 <a class="header-anchor" href="#属性获取" aria-label="Permalink to &quot;属性获取&quot;">​</a></h2><h3 id="object-keys" tabindex="-1">Object.keys <a class="header-anchor" href="#object-keys" aria-label="Permalink to &quot;Object.keys&quot;">​</a></h3><p>返回一个由一个给定对象的自身可枚举属性组成的数组，数组中属性名的排列顺序和正常循环遍历该对象时返回的顺序一致 。</p><p>返回的是所有可枚举属性键，也就是属性下的 enumerable: true。但不包括 Symbol 值作为名称的属性键。</p><h3 id="object-getownpropertynames" tabindex="-1">Object.getOwnPropertyNames <a class="header-anchor" href="#object-getownpropertynames" aria-label="Permalink to &quot;Object.getOwnPropertyNames&quot;">​</a></h3><p>返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括 Symbol 值作为名称的属性）组成的数组。</p><p>返回的是对象所有自己的属性键 ，包括不可枚举属性但不包括 Symbol 值作为名称的属性键。</p><h3 id="object-getownpropertysymbols" tabindex="-1">Object.getOwnPropertySymbols <a class="header-anchor" href="#object-getownpropertysymbols" aria-label="Permalink to &quot;Object.getOwnPropertySymbols&quot;">​</a></h3><p>一个给定对象自身的所有 Symbol 属性的数组。</p><p>返回一个给定对象自身的所有 Symbol 属性键的数组。</p><h2 id="节点位置关系" tabindex="-1">节点位置关系 <a class="header-anchor" href="#节点位置关系" aria-label="Permalink to &quot;节点位置关系&quot;">​</a></h2><h3 id="node-contains" tabindex="-1">Node.contains <a class="header-anchor" href="#node-contains" aria-label="Permalink to &quot;Node.contains&quot;">​</a></h3><p>返回的是一个布尔值，来表示传入的节点是否为该节点的后代节点</p><h3 id="node-comparedocumentposition" tabindex="-1">Node.compareDocumentPosition <a class="header-anchor" href="#node-comparedocumentposition" aria-label="Permalink to &quot;Node.compareDocumentPosition&quot;">​</a></h3><p>比较当前节点与任意文档中的另一个节点的位置关系</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> compareMask </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">compareDocumentPosition</span><span style="color:#BABED8;">(otherNode)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="获取文本" tabindex="-1">获取文本 <a class="header-anchor" href="#获取文本" aria-label="Permalink to &quot;获取文本&quot;">​</a></h2><h3 id="htmlelement-innertext" tabindex="-1">HTMLElement.innerText <a class="header-anchor" href="#htmlelement-innertext" aria-label="Permalink to &quot;HTMLElement.innerText&quot;">​</a></h3><ul><li>对 HTML 标签进行解析；</li><li>对 CSS 样式进行带限制的解析和渲染；</li><li>将 ASCII 实体转换为对应的字符；</li><li>剔除格式信息（如\\t、\\r、\\n 等），将多个连续的空格合并为一个</li></ul><h3 id="node-textcontent" tabindex="-1">Node.textContent <a class="header-anchor" href="#node-textcontent" aria-label="Permalink to &quot;Node.textContent&quot;">​</a></h3><ul><li>对 HTML 标签进行剔除</li><li>将 ASCII 实体转换为相应的字符</li><li>对 HTML 标签是剔除不是解析，也不会出现 CSS 解析和渲染的处理，因此<code>&lt;br/&gt;</code>等元素是不生效的。</li><li>不会剔除格式信息和合并连续的空格，因此\\t、\\r、\\n 和连续的空格将生效</li></ul><h2 id="节点取值" tabindex="-1">节点取值 <a class="header-anchor" href="#节点取值" aria-label="Permalink to &quot;节点取值&quot;">​</a></h2><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><p>特定的一些 HTMLElement 元素，用 value 属性获取其值。常见的有 value 属性的元素如下：</p><ul><li><code>HTMLInputElement &lt;input value=&quot;1&quot; /&gt;</code></li><li><code>HTMLTextAreaElement &lt;textarea value= &quot;你哈&quot; /&gt;</code></li><li><code>HTMLButtonElement &lt;button value= &quot;提交&quot; /&gt;</code></li><li><code>HTMLDataElement &lt;data value=&quot;21053&quot;&gt;圣女果&lt;/data&gt;</code></li><li><code>HTMLSelectElement &lt;select&gt;&lt;option value =&quot;volvo&quot;&gt;Volvo&lt;/option&gt;</code></li><li><code>HTMLOptionElement &lt;select&gt;&lt;option value =&quot;volvo&quot;&gt;Volvo&lt;/option&gt;</code></li><li><code>HTMLProgressElement &lt;progress value=&quot;22&quot; max=&quot;100&quot;&gt;&lt;/progress&gt;</code></li></ul><h3 id="node-nodevalue" tabindex="-1">Node.nodeValue <a class="header-anchor" href="#node-nodevalue" aria-label="Permalink to &quot;Node.nodeValue&quot;">​</a></h3><p>对于 text, comment, 和 CDATA 节点来说, nodeValue 返回该节点的文本内容.</p><p>对于 attribute 节点来说, 返回该属性的属性值.</p><p>返回值是一个具有以下值的位掩码：</p><table><thead><tr><th style="text-align:left;">常量名</th><th style="text-align:left;">十进制值</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">DOCUMENT_POSITION_DISCONNECTED</td><td style="text-align:left;">1</td><td style="text-align:left;">不在同一文档中</td></tr><tr><td style="text-align:left;">DOCUMENT_POSITION_PRECEDING</td><td style="text-align:left;">2</td><td style="text-align:left;">otherNode 在 node 之前</td></tr><tr><td style="text-align:left;">DOCUMENT_POSITION_FOLLOWING</td><td style="text-align:left;">4</td><td style="text-align:left;">otherNode 在 node 之后</td></tr><tr><td style="text-align:left;">DOCUMENT_POSITION_CONTAINS</td><td style="text-align:left;">8</td><td style="text-align:left;">otherNode 包含 node</td></tr><tr><td style="text-align:left;">DOCUMENT_POSITION_CONTAINED_BY</td><td style="text-align:left;">16</td><td style="text-align:left;">otherNode 被 node 包含</td></tr><tr><td style="text-align:left;">DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</td><td style="text-align:left;">32</td><td style="text-align:left;">待定</td></tr></tbody></table><h2 id="节点复制" tabindex="-1">节点复制 <a class="header-anchor" href="#节点复制" aria-label="Permalink to &quot;节点复制&quot;">​</a></h2><h3 id="document-adoptnode" tabindex="-1">Document.adoptNode <a class="header-anchor" href="#document-adoptnode" aria-label="Permalink to &quot;Document.adoptNode&quot;">​</a></h3><p>从其他的 document 文档中获取一个节点。该节点以及它的子树上的所有节点都会从原文档删除 (如果有这个节点的话), 并且它的 ownerDocument 属性会变成当前的 document 文档。之后你可以把这个节点插入到当前文档中。</p><p><strong>语法</strong></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> node </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">adoptNode</span><span style="color:#BABED8;">(externalNode)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>node</strong>: 导入当前文档的新节点。新节点的 parentNode 是 null, 因为它还没有插入当前文档的文档树中，属于游离状态。</p><p><strong>externalNode</strong>: 将要从外部文档导入的节点。</p><blockquote><p>该方法不但可以从 iframe 中获取 adopt 元素，在同一 document 文档下的不同两个元素中也可以使用，该方法可以实现从左边栏列表中选取某些元素加载到右边栏的功能。</p></blockquote><h3 id="document-importnode" tabindex="-1">Document.importNode <a class="header-anchor" href="#document-importnode" aria-label="Permalink to &quot;Document.importNode&quot;">​</a></h3><p>将外部文档的一个节点拷贝一份，然后可以把这个拷贝的节点插入到当前文档中。（源节点不会从外部文档中删除，被导入的节点是源节点的一个拷贝。）</p><p><strong>语法</strong></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> node </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">importNode</span><span style="color:#BABED8;">(externalNode</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> deep)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>node</strong>: 导入当前文档的新节点。新节点的 parentNode 是 null, 因为它还没有插入当前文档的文档树中，属于游离状态。</p><p><strong>externalNode</strong>: 将要从外部文档导入的节点。</p><p><strong>deep(可选)</strong>: 一个布尔值，表明是否要导入节点的后代节点。</p></div><h3 id="node-clonenode" tabindex="-1">Node.cloneNode <a class="header-anchor" href="#node-clonenode" aria-label="Permalink to &quot;Node.cloneNode&quot;">​</a></h3><p>Node.cloneNode() 方法返回调用该方法的节点的一个副本。</p><p><strong>语法</strong></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> dupNode </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> node</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">cloneNode</span><span style="color:#BABED8;">(deep)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>node</strong>: 将要被克隆的节点</p><p><strong>dupNode</strong>: 克隆生成的副本节点</p><p><strong>deep(可选)</strong>: 是否采用深度克隆，如果为 true，则该节点的所有后代节点也都会被克隆，如果为 false，则只克隆该节点本身。</p></div><p><code>Node.cloneNode</code> 有一个 <code>boolean</code> 类型的可选参数<code>deep</code>:</p><ul><li>true: 则该节点的所有后代节点也都会被克隆</li><li>false: 则只克隆该节点本身</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><code>cloneNode deep</code> 参数在不同版本的浏览器实现中，默认值可能不一样， 所以强烈建议写上值。</li><li><code>cloneNode</code> 会克隆一个元素节点会拷贝它所有的属性以及属性值,当然也就包括了属性上绑定的事件(比如 οnclick=&quot;alert(1)&quot;),但不会拷贝那些使用 addEventListener()方法或者 node.onclick = fn 这种用 JavaScript 动态绑定的事件。</li><li>在使用 <code>Node.appendChild()</code>或其他类似的方法将拷贝的节点添加到文档中之前，那个拷贝节点并不属于当前文档树的一部分，也就是说，它没有父节点。</li><li>如果 <code>deep</code> 参数设为 <code>false</code>,则不克隆它的任何子节点。该节点所包含的所有文本也不会被克隆，因为文本本身也是一个或多个的 <code>Text</code> 节点。</li><li>如果 <code>deep</code> 参数设为 <code>true</code>,则会复制整棵 <code>DOM</code> 子树 (包括那些可能存在的 <code>Text</code> 子节点).对于空结点 (例如<code>&lt;img&gt;</code>和<code>&lt;input&gt;</code>元素), 则 <code>deep</code> 参数无论设为 <code>true</code> 还是设为 <code>false</code>, 都没有关系，但是仍然需要为它指定一个值。</li></ul></div><p>如果原始节点设置了 ID，并且克隆节点会被插入到相同的文档中，那么应该更新克隆节点的 ID 以保证唯一性。name 属性可能也需要进行修改，取决于你是否希望有相同名称的节点存在于文档中。 想要克隆一个节点来添加到另外一个文档中，请使用<code>Document.importNode()</code>代替本方法。</p><h2 id="父节点" tabindex="-1">父节点 <a class="header-anchor" href="#父节点" aria-label="Permalink to &quot;父节点&quot;">​</a></h2><h3 id="node-childnodes" tabindex="-1">Node.childNodes <a class="header-anchor" href="#node-childnodes" aria-label="Permalink to &quot;Node.childNodes&quot;">​</a></h3><p>节点的子节点集合，包括元素节点、文本节点还有属性节点</p><p>childNodes 返回所有类型的节点</p><h3 id="parentnode-children" tabindex="-1">ParentNode.children <a class="header-anchor" href="#parentnode-children" aria-label="Permalink to &quot;ParentNode.children&quot;">​</a></h3><p>返回的只是节点的元素节点集合, 即 nodeType 为 1 的节点。</p><h2 id="添加节点" tabindex="-1">添加节点 <a class="header-anchor" href="#添加节点" aria-label="Permalink to &quot;添加节点&quot;">​</a></h2><h3 id="node-appendchild" tabindex="-1">node.appendChild <a class="header-anchor" href="#node-appendchild" aria-label="Permalink to &quot;node.appendChild&quot;">​</a></h3><p>将一个节点附加到指定父节点的子节点列表的末尾处</p><h3 id="parentnode-append" tabindex="-1">ParentNode.append <a class="header-anchor" href="#parentnode-append" aria-label="Permalink to &quot;ParentNode.append&quot;">​</a></h3><p>方法在 <code>ParentNode</code> 的最后一个子节点之后插入一组 <code>Node</code> 对象或 <code>DOMString</code> 对象。被插入的 <code>DOMString</code> 对象等价为 <code>Text</code> 节点.</p><ul><li><code>ParentNode.append()</code> 允许追加 <code>DOMString</code> 对象，而 <code>Node.appendChild()</code> 只接受 <code>Node</code> 对象。</li><li><code>ParentNode.append()</code> 没有返回值，而 <code>Node.appendChild()</code> 返回追加的 Node 对象。</li><li><code>ParentNode.append()</code> 可以追加多个节点和字符串，而 <code>Node.appendChild()</code> 只能追加一个节点。</li></ul><h2 id="函数调用-call-apply-bind" tabindex="-1">函数调用 call, apply, bind <a class="header-anchor" href="#函数调用-call-apply-bind" aria-label="Permalink to &quot;函数调用 call, apply, bind&quot;">​</a></h2><p><strong>相同点，都能改变被调用函数的 this 指向。</strong></p><ul><li>call: 第二个参数开始，可以接收任意个参数</li><li>apply: 第二个参数，必须是数组或者类数组</li><li>bind: 第二个参数开始，可以接收任意个参数 , 返回的是一个新的函数</li><li>bind 调用多次，this 指向第一次第一个参数</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">log</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">this</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)()) </span><span style="color:#676E95;font-style:italic;">// { val: 1 }</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>虽然 <code>this</code> 的指向不会再变改变，但是参数还是继续接受， <code>arguments</code> 长度为 <code>2</code>， 第一次 <code>bind</code> 的 <code>1</code>，第二次 <code>bind</code> 的 <code>2</code> , 都照单全收。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">log</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">this</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// { val: 1 }</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">arguments</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">arguments</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// { &#39;0&#39;: 1, &#39;1&#39;: 2 }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">},</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">val</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">},</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)()) </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="function-prototype-call" tabindex="-1">Function.prototype.call <a class="header-anchor" href="#function-prototype-call" aria-label="Permalink to &quot;Function.prototype.call&quot;">​</a></h3><p>使用一个指定的 <code>this</code> 值和单独给出的一个或多个参数来调用一个函数。</p><h3 id="function-prototype-apply" tabindex="-1">Function.prototype.apply <a class="header-anchor" href="#function-prototype-apply" aria-label="Permalink to &quot;Function.prototype.apply&quot;">​</a></h3><p>调用一个具有给定 this 值的函数，以及以一个数组（或类数组对象）的形式提供的参数</p><h3 id="function-prototype-bind" tabindex="-1">Function.prototype.bind <a class="header-anchor" href="#function-prototype-bind" aria-label="Permalink to &quot;Function.prototype.bind&quot;">​</a></h3><p>方法创建一个新的函数，在 <code>bind()</code> 被调用时，这个新函数的 <code>this</code> 被指定为 <code>bind()</code> 的第一个参数，而其余参数将作为新函数的参数，供调用时使用。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">sum</span><span style="color:#89DDFF;">(...</span><span style="color:#BABED8;font-style:italic;">args</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">total</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">args</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">s</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">cur</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">s</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">cur</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">base</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">total</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> context </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#F07178;">base</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> bindFun </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#BABED8;">(context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> callResult </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#BABED8;">(context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> applyResult </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> sum</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#BABED8;">(context</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">])</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> bindResult </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">bindFun</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">4</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">call:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> callResult) </span><span style="color:#676E95;font-style:italic;">// 1010</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">apply:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> applyResult) </span><span style="color:#676E95;font-style:italic;">// 1010</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bind:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> bindResult) </span><span style="color:#676E95;font-style:italic;">// 1010</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="字符串截取" tabindex="-1">字符串截取 <a class="header-anchor" href="#字符串截取" aria-label="Permalink to &quot;字符串截取&quot;">​</a></h2><h3 id="string-prototype-substr" tabindex="-1">String.prototype.substr <a class="header-anchor" href="#string-prototype-substr" aria-label="Permalink to &quot;String.prototype.substr&quot;">​</a></h3><p>返回一个字符串中从指定位置开始到指定字符数的字符</p><p>语法：第二参数，是需要截取的长度</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substr</span><span style="color:#BABED8;">(start[</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> length])</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="string-prototype-substring" tabindex="-1">String.prototype.substring <a class="header-anchor" href="#string-prototype-substring" aria-label="Permalink to &quot;String.prototype.substring&quot;">​</a></h3><p>返回一个字符串在开始索引到结束索引之间的一个子集, 或从开始索引直到字符串的末尾的一个子集。</p><p>语法：第二参数，结束索引</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substring</span><span style="color:#BABED8;">(indexStart[</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> indexEnd])</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">我们都是好孩子</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substr</span><span style="color:#BABED8;">()) </span><span style="color:#676E95;font-style:italic;">// 我们都是好孩子</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substring</span><span style="color:#BABED8;">()) </span><span style="color:#676E95;font-style:italic;">// 我们都是好孩子</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substr</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 们都是好孩子</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substring</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 们都是好孩子</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substr</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 子</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substring</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 我们都是好孩子</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substr</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 们都</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substring</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)) </span><span style="color:#676E95;font-style:italic;">// 们</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="遍历" tabindex="-1">遍历 <a class="header-anchor" href="#遍历" aria-label="Permalink to &quot;遍历&quot;">​</a></h2><h3 id="for-in" tabindex="-1">for in <a class="header-anchor" href="#for-in" aria-label="Permalink to &quot;for in&quot;">​</a></h3><p>获取 enumerable:true 的属性键</p><h3 id="for-of" tabindex="-1">for of <a class="header-anchor" href="#for-of" aria-label="Permalink to &quot;for of&quot;">​</a></h3><p>遍历属性值。不受到 enumerable 限制。</p><h2 id="域名信息" tabindex="-1">域名信息 <a class="header-anchor" href="#域名信息" aria-label="Permalink to &quot;域名信息&quot;">​</a></h2><h3 id="location-host" tabindex="-1">location.host <a class="header-anchor" href="#location-host" aria-label="Permalink to &quot;location.host&quot;">​</a></h3><p>包含：主机名，如果 URL 的端口号是非空的，还会跟上一个 &#39;:&#39; ，最后是 URL 的端口号</p><h3 id="location-hostname" tabindex="-1">location.hostname <a class="header-anchor" href="#location-hostname" aria-label="Permalink to &quot;location.hostname&quot;">​</a></h3><p>返回域名</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> anchor </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createElement</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">anchor</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">href </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://developer.mozilla.org:443/en-US/Location.host</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(anchor</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">host </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">developer.mozilla.org:443</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(anchor</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">host </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">developer.mozilla.org</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(anchor</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">hostname </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">developer.mozilla.org:443</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(anchor</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">hostname </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">developer.mozilla.org</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">anchor</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">href </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://developer.mozilla.org:4097/en-US/Location.host</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(anchor</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">host </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">developer.mozilla.org:4097</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(anchor</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">hostname </span><span style="color:#89DDFF;">==</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">developer.mozilla.org</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>默认端口下， host 等于 hostname</p><p>host 额外包含端口号</p><h2 id="异步加载脚本" tabindex="-1">异步加载脚本 <a class="header-anchor" href="#异步加载脚本" aria-label="Permalink to &quot;异步加载脚本&quot;">​</a></h2><h3 id="defer" tabindex="-1">defer <a class="header-anchor" href="#defer" aria-label="Permalink to &quot;defer&quot;">​</a></h3><p>异步加载，按照加载顺序执行脚本的</p><h3 id="async" tabindex="-1">async <a class="header-anchor" href="#async" aria-label="Permalink to &quot;async&quot;">​</a></h3><p>异步加载，乱序执行脚本。</p><p><img src="`+o+'" alt=""></p>',108),t=[p];function r(c,i,y,d,D,F){return n(),a("div",null,t)}const B=s(e,[["render",r]]);export{h as __pageData,B as default};
